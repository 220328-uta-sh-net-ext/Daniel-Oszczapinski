# Questions for sql qc and quiz

1. What is [SQL] and what is a [Database] and [RDBMS]?

    [Structured-Query-Language] - is a database computer language designed for the retrieval and management of data in a relational database which represented by a table
    - A [database] is a set of data stored in a computer. This data is usually structured in a way that makes the data easily accessible.
    - Allows users to describe the data.
    - Allows users to define the data in a database and manipulate that data.
    - Allows to embed within other languages using SQL modules, libraries & pre-compilers.
    - Allows users to create and drop databases and tables.
    - Allows users to create view, stored procedure, functions in a database.
    - Allows users to set permissions on tables, procedures and views.
    - [SQL] is the standard language for Relational Database System for All the Relational Database Management Systems (RDMS)

    Types of Syntax for SQL:
    - SELECT
    - DISTINCT
    - WHERE
    - AND/OR
    - IN
    and more

    [Relational-Database-Management-Systems](RDBMS) -  is a program that allows you to create, update, and administer a relational database. we are using azure, like mySql, SQLlite, Oracle

2. What is [Normalization]?
    - is a database design technique that reduces data redundancy and eliminates undesirable characteristics like Insertion, Update and Deletion Anomalies.
    - Normalization rules divides larger tables into smaller tables and links them using relationships.
    - The purpose of Normalisation in SQL is to eliminate redundant (repetitive) data and ensure data is stored logically.

3. What is [Multiplicity]?

    - It is a way to describe the relationships between 2 tables
    - We will use the primary and foreign keys to established these relationships

    Three types of relationships we have covered:
    - One to One
        - When one row in Table A is directly related to one row in Table B and vice versa
        - You must use the unique constraint in the foreign key to ensure that only one row in Table B will be related to one row in Table A
        - Ex: One person can only have one heart
    - One to Many
        - When one row in Table A is related to multiple rows in Table B
        - Ex: One person has many fingers but only one finger is related to one person (you cannot share fingers!)
    - Many to Many
        - Many rows in Table A is related to many rows in Table B
        - You must construct a join table to achieve many to many relationship
            - Join tables must at least consist of two columns that are both foreign keys that either points to Table A and Table B
            - Essentially, one column references Table A and one column references Table B
        - Ex: A pokemon can have many abilities and An ability can have many pokemon
            - Basically Tackle can exist to many pokemons and can share it and pokemon can have many abilities beyond just tackle
